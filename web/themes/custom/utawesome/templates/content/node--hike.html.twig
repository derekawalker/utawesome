{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% block libraries %}
  {{ attach_library('utawesome/places') }}
{% endblock %}

{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}
{{ attach_library('classy/node') }}
<article{{ attributes.addClass(classes) }}>

  {% block title %}
    {{ title_prefix }}
    {% if label and not page %}
      <h2{{ title_attributes }}>
        <a href="{{ url }}" rel="bookmark">{{ label }}</a>
      </h2>
    {% endif %}
    {{ title_suffix }}
  {% endblock %}

  {% if display_submitted %}
    <footer class="node__meta">
      {{ author_picture }}
      <div{{ author_attributes.addClass('node__submitted') }}>
        {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
        {{ metadata }}
      </div>
    </footer>
  {% endif %}

  <div{{ content_attributes.addClass('node__content') }}>

    {% if not (node.field_image.isEmpty == true) %}
    {{ content.field_image }}
    {% endif %}

    <div class="node-hike-intro">

      {{ content.flag_add_to_trip }}

      <h2 class="node-hike-title">
        {{ label }}
      </h2>

      {% if not (node.field_location.isEmpty == true) %}
      <div class="node-hike-location">
        {{ content.field_location.0 }}
      </div>
      {% endif %}


      {% if not (node.field_hike_type.isEmpty == true) %}
      <div class="node-hike-type">
        {{ content.field_hike_type.0 }}
      </div>
      {% endif %}
    </div>

    <div id="node-hike-tabs" class="node-hike-tabs">
      <div class="node-hike-tab active">
        <a href="#node--about">
          <i class="fas fa-info-circle"></i>
          <div>About</div>
        </a>
      </div>

      <div class="node-hike-tab">
       <a href="#node--reviews">
          <i class="fas fa-comments"></i>
          <div>Reviews</div>
       </a>
      </div>

      {% if not (node.field_gear.isEmpty == true) %}
      <div class="node-hike-tab">
        <a href="#node--gear">
          <i class="fas fa-hiking"></i>
          <div>Gear</div>
        </a>
      </div>
      {% endif %}
    </div>

    <span id="node--about" class="anchor"></span>
    <div class="node-hike-tabs-container">

      {{ content.field_rating }}

      {% if not (node.body.isEmpty == true) %}
      {% set summary = content.body|render|striptags %}
      <details class="node-hike-body">
        <summary >
          {{ summary|length > 100 ? summary|slice(0, 100) ~ '...' : summary }}
          <span><a>more</a></span>
        </summary>
        {{ content.body }}
      </details>
      {% endif %}

      {% if not ((node.field_distance.isEmpty == true) and (node.field_difficult.isEmpty == true)) %}
      <div class="node-hike-pill-wrapper">
        {% if not (node.field_distance.isEmpty == true) %}
        <div class="node-hike-pill"><div class="hike-field-distance">{{ content.field_distance }} <span>miles</span> <em>(round-trip)</em></div></div>
        {% endif %}

        {% if not (node.field_difficult.isEmpty == true) %}
        <div class="node-hike-pill {{ content.field_difficult.0 }}">{{ content.field_difficult }}</div>
        {% endif %}
      </div>
      {% endif %}

      {% if not (node.field_fees_permits.isEmpty == true) %}
      <div class="node-hike-expand-wrapper">
        <div class="node-hike-expand-title">
          Fees &amp; Permits
        </div>

        <div class="node-hike-expand-body">
          {{ content.field_fees_permits }}
        </div>
      </div>
      {% endif %}

      {% if not (node.field_tips.isEmpty == true) %}
      <details class="node-hike-collapse-wrapper">
        <summary class="node-hike-collapse-title">
          Tips &amp; Suggestions
        </summary>

        <div class="node-hike-collapse-body">
          {{ content.field_tips }}
        </div>
      </details>
      {% endif %}

      {% if not (node.field_features.isEmpty == true) %}
      <details class="node-hike-collapse-wrapper">
        <summary class="node-hike-collapse-title">
          Features &amp; Amenities
        </summary>

        <div class="node-hike-collapse-body">
          {{ content.field_features }}
        </div>
      </details>
      {% endif %}

      <div class="node-hike-expand-wrapper">
        <div class="node-hike-expand-title">
          Location &amp; Contact Information
        </div>

        {%
          if not ((node.field_address.isEmpty == true)
         and (node.field_phone.isEmpty == true)
         and (content.field_website.isEmpty == true))
        %}
        <div class="node-hike-expand-body">
          {% if not (node.field_address.isEmpty == true) %}
          {{ content.field_address }}
          {{ content.field_map }}
          {% endif %}

          {% if not (node.field_phone.isEmpty == true) %}
          {{ content.field_phone }}
          {% endif %}

          {% if not (content.field_website.isEmpty == true) %}
          {{ content.field_website }}
          {% endif %}
        </div>
      </div>
      {% endif %}

      {{ content.flag_report_an_error }}

      <span id="node--reviews" class="anchor"></span>
      <div class="node-hike-section node-hike-section-reviews">
        <h4 class="node-hike-section-title">Reviews</h4>

        {% if not (node.field_local_reviews.isEmpty == true) %}
        <h5 class="node-hike-section-title">In-Depth Local Reviews:</h5>
        {{ content.field_local_reviews }}
        {% endif %}

        {% if not (node.field_articles.isEmpty == true) %}
        <h5 class="node-hike-section-title">Additional Articles:</h5>
        {{ content.field_articles }}
        {% endif %}

        <details>
          <summary><h5 class="node-hike-section-title">Visitor Reviews:</h5></summary>
          <div class="node-hike-section-reviews-details">{{ content.field_reviews }}</div>
        </details>
      </div>

      {% if not (node.field_gear.isEmpty == true) %}
      <span id="node--gear" class="anchor"></span>
      <div class="node-hike-section node-hike-section-gear">
        <h4 class="node-hike-section-title">What to Bring</h4>
        {{ content.field_gear }}
      </div>
      {% endif %}

    </div>


  </div>

  {{ content.field_radioactivity }}

</article>
